repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.2
    hooks:
      - id: ruff
        args: ["--fix"]
        additional_dependencies: []
        files: ^ipfs-service/.*\.(py)$
      - id: ruff-format
        files: ^ipfs-service/.*\.(py)$

  # Use system-installed prettier from Nix
  - repo: local
    hooks:
      - id: prettier
        name: prettier
        language: system
        entry: bash -lc 'prettier -w'
        files: ^(bridge/|docs/).*\.(ts|tsx|js|jsx|json|md|sol)$

  # Use system-installed eslint from Nix (only if project has config)
  - repo: local
    hooks:
      - id: eslint
        name: eslint
        language: system
        entry: bash -lc 'if [ -f bridge/package.json ]; then (cd bridge && pnpm install --silent && pnpm exec eslint); else echo "[skip] eslint"; fi'
        files: ^bridge/.*\.(ts|tsx|js|jsx)$

  # Rust format check (workspace-local in each subrepo)
  - repo: local
    hooks:
      - id: cargo-fmt
        name: cargo fmt --check
        language: system
        entry: bash -lc 'cargo fmt --all -- --check'
        files: ^(chain/|module-pallet/|mcp-registrar/).*

  # Rust clippy (advisory; does not block by default)
  - repo: local
    hooks:
      - id: cargo-clippy
        name: cargo clippy (non-blocking)
        language: system
        entry: bash -lc 'cargo clippy --all-targets --all-features || true'
        files: ^(chain/|module-pallet/|mcp-registrar/).*

  # Shell linting for our scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        files: ^scripts/.*\.sh$
